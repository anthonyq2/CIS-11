- [ ] 1.1.3 Section Review, Questions 1,3, 8, 12
1. How do assemblers and linkers work together? 
   The assembler converts source code programs from assembly language into machine language. The task of the linker is to combine the
   individual files created by the assembler into a single executable program.
3. What is meant by one-to-many relationship when comparing a high-level language to machine language?
   One to many means that the key words in high level languages translate to multiple assembly instructions.
8. Do you suppose type checking on pointer variables is stronger (stricter) in assembly language, or in C an C++?
   I think it's stricter in C and C++ because the data are often abstracted.
12. Translate the following C++ expression to assembly language, using the example presented earlier in this chapter as a guide: 
X = (Y * 4) + 3.
   mov  eax, Y
   mul  eax, 4
   mov  ebx, 3
   iadd ebx
   mov  X, eax
      

- [ ] 1.2.1 Section Review, Questions 2, 3, 10
- [ ] 1.3.9 Section Review, Questions 2, 3, 5, 6, 7 
- [ ] 1.7.1 Short Answer, Questions 1-22 and 25
- [ ] 1.7.2 Algorithm Workbench, Choose any 1 question 
