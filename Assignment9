Briefly describe the concept of "Stack Frame" (1 through 5 points depending on quality of the answer)
 ANSWER: The stack frame is the collection of all the data associated with one particular part of a program (usually a function call). The stack frame is responsible for tracking the return address of the function, any of the variables passed in the argument of the function, and the values of local variables. 
 
Briefly describe the concept of a "Calling Convention" (1 through 5 points depending on quality of the answer)
 ANSWER: A calling convention is essentially the description of how subroutines handle their calls. Calling conventions deal with where return values and return addresses are placed (registers/call stack/etc.), the order which arguments are passed, and how a return value is delivered back to the caller. 
 Why do the book examples always start functions with "push ebp" and "mov ebp,esp" (2 points)
 What is the x64 equivalent to "push ebp" and "mov ebp,esp)" (2 points)
 What are the differences between "Microsoft x64 calling convention" and "System V AMD64 ABI calling convention" (2 points)
Hint: https://en.wikipedia.org/wiki/X86_calling_conventions

void myFunction(int a, int b, int c, int d, int e, int f)  {
  //some code here
}
 Upon entry to myFunction (above), what does the stack look like when using Microsoft x64 calling convention? (3 points)

Hint: https://docs.microsoft.com/en-us/cpp/build/parameter-passing

 Upon entry to myFunction (above), what does the stack look like when using stdcall convention (3 points)

Hint: https://en.wikipedia.org/wiki/X86_calling_conventions

 Upload your assignment to GitHub

 Email james.wilson@rccd.edu with the url to the source code on GitHub

*** 22 points ***
